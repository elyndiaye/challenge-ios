//
//  DetailProductViewController.swift
//  Lodjinha
//
//  Created by ely.assumpcao.ndiaye on 20/06/19.
//  Copyright (c) 2019 ely.assumpcao.ndiaye. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailProductDisplayLogic: class
{
    func displayInitialData(viewModel: DetailProduct.Load.ViewModel)
}

class DetailProductViewController: UIViewController, DetailProductDisplayLogic
{
    var interactor: DetailProductBusinessLogic?
    var router: (NSObjectProtocol & DetailProductRoutingLogic & DetailProductDataPassing)?
    
    @IBOutlet weak var productImageView: UIImageView!
    
    @IBOutlet weak var productLbl: UILabel!
    @IBOutlet weak var precoDeLbl: UILabel!
    @IBOutlet weak var precoPor: UILabel!
    @IBOutlet weak var descriptionTxt: UITextView!
    
    
    var arrayProduto = [ProdutosById]()
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = DetailProductInteractor()
        let presenter = DetailProductPresenter()
        let router = DetailProductRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    override func viewWillAppear(_ animated: Bool) {
        self.tabBarController?.tabBar.isHidden = true
        loadInitialData()
    }
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        print("Print da DetailView:\(router?.dataStore?.productId)")
        // loadInitialData()
        
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func loadInitialData()
    {
        let request = DetailProduct.Load.Request()
        interactor?.doLoadInitialData(request: request)
    }
    
    func displayInitialData(viewModel: DetailProduct.Load.ViewModel)
    {
        arrayProduto = viewModel.produtos
        print("Produto:\(arrayProduto)")
        if arrayProduto.isEmpty{
            title = "Produto"
            productImageView.kf.indicatorType = .activity
            productImageView.kf.setImage(with: URL(string: "https://gph.is/1XRTmuh")!)
        }else{
            
            title = arrayProduto[0].nome
            productLbl.text = arrayProduto[0].nome
            precoDeLbl.attributedText = "De:\(arrayProduto[0].precoDe)".strikeThrough()
            let roundPreco = String(format:"%.2f",arrayProduto[0].precoPor)
            precoPor.text = "Por \(roundPreco)"
            descriptionTxt.text = arrayProduto[0].descricao
            let Image = arrayProduto[0].urlImagem
            if let image = URL(string: Image){
                productImageView.kf.indicatorType = .activity
                productImageView.kf.setImage(with: image)
            }
        }
    }
}

