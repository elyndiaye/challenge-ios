//
//  ProductsInteractor.swift
//  Lodjinha
//
//  Created by ely.assumpcao.ndiaye on 21/06/19.
//  Copyright (c) 2019 ely.assumpcao.ndiaye. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProductsBusinessLogic
{
    func doLoadInitialData(request: Products.Load.Request)
    func doLoadDetailProducts(request: Products.DetailProduct.Request)
}

protocol ProductsDataStore
{
    var categoriaId: Int { get set }
    var productId: Int { get set }
}

class ProductsInteractor: ProductsBusinessLogic, ProductsDataStore
{
    var presenter: ProductsPresentationLogic?
    var worker: ProductsWorker?
    var categoriaId: Int = 0
    var productId: Int = 0
    
    // MARK: Do something
    
    func doLoadInitialData(request: Products.Load.Request) {
        worker = ProductsWorker()
        worker?.fetchProductByCategoryId(categoryId: categoriaId, completionHandler: { produtos in
            let response = Products.Load.Response(produtos: produtos)
            self.presenter?.presentInitialData(response: response)
        })
        
    }
    
    func doLoadDetailProducts(request: Products.DetailProduct.Request) {
        let product = request.product
        productId = product[0].id
        print("ProductId:\(productId)")
        let response = Products.DetailProduct.Response()
        presenter?.presentDetailProduct(response: response)
    }
    
}
